---
# Variables
variables:
  - &enable_firewall true
  - &hiera_hierarchy
    - "%{literal('%')}{clientcert}"
    - "%{literal('%')}{tier}"
    - "%{literal('%')}{pp_role}"
    - "%{literal('%')}{data_centre}"
    - common
  - &hiera_backends
    yaml:
      datadir: "/etc/puppetlabs/code/environments/%{literal('%')}{environment}/hieradata"
    json:
      datadir: "/etc/puppetlabs/code/environments/%{literal('%')}{environment}/hieradata"
  - &manage_r10k true
  - &manage_heira true
  - &r10k_sources
    base:
      remote: 'https://github.com/beergeek/puppet_env.git'
      basedir: '/etc/puppetlabs/code/environments'

profile::base::noop_scope: false
profile::dns::noop_scope: false
profile::fw::noop_scope: false
profile::logging::noop_scope: false
profile::monitoring::noop_scope: false
profile::repos::noop_scope: false
profile::ssh::noop_scope: false
profile::sudo::noop_scope: false
profile::time_locale::noop_scope: false

puppet_enterprise::profile::mcollective::agent::activemq_brokers:
  - "%{::servername}"

# japan test
profile::japan::users:
  - 'ブレット'
  - 'ディラン'
  - 'ジェシー'

# DNS
profile::dns::name_servers:
  - 10.0.2.3
profile::dns::purge: false

# SSH
profile::ssh::enable_firewall: *enable_firewall
profile::ssh::banner_content: "This system is the property of Puppet Labs. Unauthorised access is not permitted"
profile::ssh::allowed_groups:
  - 'root'
  - 'vagrant'
profile::ssh::options_hash:
  Port: 22
  AcceptEnv: 'LANG LC_*'
  ChallengeResponseAuthentication: no
  PermitRootLogin: yes
  PrintMotd: no
  Subsystem: 'sftp /usr/libexec/openssh/sftp-server'
  UsePAM: yes
  X11Forwarding: yes

# SUDO
profile::sudo::sudo_hash:
  vagrant:
    priority: 10
    content: '%vagrant ALL=(ALL) NOPASSWD: ALL'
profile::sudo::sudo_hash_defaults:
  priority: 50
profile::sudo::sudo_purge: true
profile::sudo::sudo_replace_config: true

# LOGGING
profile::logging::log_local: true
profile::logging::port: 514
profile::logging::remote_servers: false
profile::logging::remote_type: 'tcp'
profile::logging::rotate: 10
profile::logging::rotate_every: 'day'
profile::logging::size: '200k'

# COM
profile::com::manage_r10k: *manage_r10k
profile::com::r10k_sources: *r10k_sources
profile::com::manage_hiera: *manage_heira
profile::com::hiera_hierarchy: *hiera_hierarchy
profile::com::hiera_backends: *hiera_backends
profile::com::enable_firewall: *enable_firewall

# MOM
profile::mom::manage_r10k: *manage_r10k
profile::mom::r10k_sources: *r10k_sources
profile::mom::manage_hiera: *manage_heira
profile::mom::hiera_hierarchy: *hiera_hierarchy
profile::mom::hiera_backends: *hiera_backends
profile::mom::enable_firewall: *enable_firewall
profile::mom::node_groups:
  "PE Infrastructure":
    classes:
      "puppet_enterprise":
        "certificate_authority_host": "%{::servername}"
        "console_host": "%{::servername}"
        "console_port": "443"
        "database_host": "%{::servername}"
        "database_port": "5432"
        "database_ssl": "true"
        "mcollective_middleware_hosts":
          - "%{trusted.certname}"
        "puppet_master_host": "%{::servername}"
        "puppetdb_database_name": "pe-puppetdb"
        "puppetdb_database_user": "pe-puppetdb"
        "puppetdb_host": "%{::servername}"
        "puppetdb_port": "8081"
  "PE PuppetDB":
    classes:
      "puppet_enterprise::profile::puppetdb": {}
    parent: "PE Infrastructure"
    rule: ["or", ["=", "name", "%{::servername}"]]
  "Production environment":
    classes: {}
    override_environment: true
    rule: []
  "PE MCollective":
    classes:
      "puppet_enterprise::profile::mcollective::agent": {}
    parent: "PE Infrastructure"
    rule: ["and",["~",["fact","id"],"root|Administrator|vagrant|WINWEB"],["~",["fact","aio_agent_version"],".+"]]
  "PE Master":
    classes:
      "pe_repo": {}
      "pe_repo::platform::el_6_x86_64": {}
      "pe_repo::platform::windows_x86_64": {}
      "role::mom_server": {}
      "puppet_enterprise::profile::master": {}
      "puppet_enterprise::profile::master::mcollective": {}
      "puppet_enterprise::profile::mcollective::peadmin": {}
    parent: "PE Infrastructure"
    rule: ["or", ["=", "name", "%{::servername}"]]
  "PE ActiveMQ Broker":
    classes:
      "puppet_enterprise::profile::amq::broker": {}
    parent: "PE Infrastructure"
    rule: ["or", ["=", "name", "%{::servername}"]]
  "PE Agent":
    classes:
      "puppet_enterprise::profile::agent": {}
    parent: "PE Infrastructure"
    rule: ["and", ["~", ["fact", "aio_agent_version"], ".+"]]
  "PE Certificate Authority":
    classes:
      "puppet_enterprise::profile::certificate_authority": {}
    parent: "PE Infrastructure"
    rule: ["or", ["=", "name", "%{::servername}"]]
  "PE Console":
    classes:
      "pe_console_prune":
        "prune_upto": 30
      "puppet_enterprise::license": {}
      "puppet_enterprise::profile::console": {}
    parent: "PE Infrastructure"
    rule: ["or", ["=", "name", "%{::servername}"]]
  "Repo Servers":
    classes:
      "role::repo_server": {}
    rule: ["and", ["~", ["fact", "pp_role"], "repo_server"]]
  "Web Servers":
    classes:
      "role::web_server": {}
    rule: ["and", ["~", ["fact", "pp_role"], "web_server"]]
  "DB Servers":
    classes:
      "role::db_server": {}
    rule: ["and", ["~", ["fact", "pp_role"], "db_server"]]
  "Load Balancer":
    classes:
      "role::load_balancer": {}
    rule: ["and", ["~", ["fact", "pp_role"], "lb"]]
  "Monitoring Servers":
    classes:
      "role::monitor_server": {}
    rule: ["and", ["~", ["fact", "pp_role"], "repo_server"]]
profile::mom::node_groups_defaults:
  ensure: present
  environment: production
  parent: 'All Nodes'


# Load Balancer
profile::lb_services::enable_firewall: *enable_firewall
profile::lb_services::listeners:
  stats:
    collect_exported: false
    ipaddress: "%{::ipaddress_eth1}"
    ports: '9090'
    options:
      mode: 'http'
      stats: ['uri /', 'auth puppet:puppet']
  http00:
    collect_exported: true
    ipaddress: "%{::ipaddress_eth1}"
    ports: '80'
    options:
      mode: 'tcp'
  https00:
    collect_exported: true
    ipaddress: "%{::ipaddress_eth1}"
    ports: '443'
    options:
      mode: 'tcp'
  puppet00:
    collect_exported: true
    ipaddress: "%{::ipaddress_eth1}"
    ports: '8140'
    options:
      mode: 'tcp'
  mco00:
    collect_exported: true
    ipaddress: "%{::ipaddress_eth1}"
    ports: '61613'
    options:
      mode: 'tcp'
      balance: 'source'

# BASE
profile::base::enable_firewall: *enable_firewall
profile::base::mco_client_array:
  - 'com0.puppetlabs.vm-peadmin'
  - 'com1.puppetlabs.vm-peadmin'
profile::base::wsus_server: 'http://wsus_server.local'
profile::base::wsus_server_port: '8530'

# TIME_LOCALE
profile::time_locale::ntp_servers:
  - 0.au.pool.ntp.org
  - 1.au.pool.ntp.org
  - 2.au.pool.ntp.org
  - 3.au.pool.ntp.org
profile::time_locale::timezone: 'UTC'
profile::time_locale::locale: 'ja_JP.utf8'

profile::base::sysctl_settings:
  kernel.msgmnb:
    value : '65536'
  kernel.msgmax:
    value : '65536'
  kernel.shmmax:
    value : '2588483584'
  kernel.shmall:
    value : '2097152'
  fs.file-max:
    value : '6815744'
  net.ipv4.tcp_keepalive_time:
    value : '1800'
  net.ipv4.tcp_keepalive_intvl:
    value : '30'
  net.ipv4.tcp_keepalive_probes:
    value : '5'
  net.ipv4.tcp_fin_timeout:
    value : '30'
  kernel.shmmni:
    value : '4096'
  fs.aio-max-nr:
    value : '1048576'
  kernel.sem:
    value : '250 32000 100 128'
  net.ipv4.ip_local_port_range:
    value : '9000 65500'
  net.core.rmem_default:
    value : '262144'
  net.core.rmem_max:
    value : '4194304'
  net.core.wmem_default:
    value : '262144'
  net.core.wmem_max:
    value : '1048576'
profile::base::sysctl_defaults:
  ensure: present
  permanent: 'yes'

# WEB_SERVICES
profile::web_services::apache::enable_firewall: *enable_firewall
profile::web_services::apache::website_hash:
  'elmo.puppetlabs.vm':
    docroot: 'elmo'
    database_search: "Mysql_database['elmo']"
    site_package: 'website_test'
  'kermit.puppetlabs.vm':
    docroot: 'kermit'
    repo_source: 'git://github.com/beergeek/kermit.git'
    repo_provider: git
    database_search: "Mysql_database['kermit']"
  'animal.puppetlabs.vm':
    docroot: 'animal'
    repo_source: 'git://github.com/beergeek/animal.git'
    repo_provider: git
  'コントロール_レポ.puppetlabs.vm':
    docroot: 'コントロール_レポ'
    repo_source: 'git://github.com/beergeek/rob.git'
    database_search: "Mysql_database['rob']"
    repo_provider: git
profile::web_services::apache::website_defaults:
  port: '80'
  priority: '10'
  docroot: '/var/www/${title}'
  repo_provider: git
profile::web_services::iis::enable_firewall: *enable_firewall
profile::web_services::iis::website_hash:
  'コントロール_レポ.puppetlabs.vm':
    docroot: 'コントロール_レポ'
    database_search: "Mysql_database['elmo']"
    site_package: 'website_test'
  'kermit.puppetlabs.vm':
    docroot: 'kermit'
    repo_source: 'git://github.com/beergeek/kermit.git'
    database_search: "Mysql_database['kermit']"
  'animal.puppetlabs.vm':
    docroot: 'animal'
    repo_source: 'git://github.com/beergeek/animal.git'
  'rob.puppetlabs.vm':
    docroot: 'rob'
    repo_source: 'git://github.com/beergeek/rob.git'
    database_search: "Mysql_database['rob']"

# DATABASE_SERVICES
profile::database_services::mysql::enable_firewall: *enable_firewall
profile::database_services::mysql::db_hash:
  elmo: {}
  kermit: {}
profile::database_services::mysql::db_defaults:
  user: 'vmware'
  password: 'secret'
profile::database_services::sqlerver::db_hash:
  elmo:
    password: 'jdfknvkjdfnk'
  kermit:
    password: 'jdfknvkjdfnk))##'

profile::puppet_users::user_hash:
  brett:
    manage_user: true
#  ブレット:
#    manage_user: true

